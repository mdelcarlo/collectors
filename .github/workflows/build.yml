name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - platform: macos-latest
            os: darwin
          - platform: ubuntu-latest
            os: linux
          - platform: windows-latest
            os: win32
    
    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install moviepy opencv-python numpy
      
      - name: Package Application
        run: npm run package
      
      - name: Run bundle-python script
        env:
          FORCE_PLATFORM: ${{ matrix.os }}
        run: node scripts/bundle-python.js
      
      - name: Make Distributable
        run: npm run make
      
      - name: List build artifacts
        shell: bash
        run: |
          find out -type f -not -path "*/\.*" | grep -v "node_modules"
      
      - name: Prepare artifacts for upload
        id: prepare-artifacts
        shell: bash
        run: |
          mkdir -p ./artifacts
          if [ "${{ matrix.platform }}" == "macos-latest" ]; then
            cp -r out/make/zip/darwin/x64/*.zip ./artifacts/ || echo "No zip files found for macOS"
            cp -r out/make/zip/darwin/arm64/*.zip ./artifacts/ || echo "No arm64 zip files found for macOS"
          elif [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            cp -r out/make/deb/x64/*.deb ./artifacts/ || echo "No deb files found"
            cp -r out/make/rpm/x64/*.rpm ./artifacts/ || echo "No rpm files found"
            cp -r out/make/zip/linux/x64/*.zip ./artifacts/ || echo "No zip files found for Linux"
          elif [ "${{ matrix.platform }}" == "windows-latest" ]; then
            cp -r out/make/squirrel.windows/x64/*.exe ./artifacts/ || echo "No exe installer found"
            cp -r out/make/zip/win32/x64/*.zip ./artifacts/ || echo "No zip files found for Windows"
          fi
          echo "Found artifacts:"
          ls -la ./artifacts/
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: robotics-contributors-${{ matrix.os }}
          path: ./artifacts/
          retention-days: 7
  
  # release:
  #   needs: build
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: ./artifacts
      
  #     - name: Display structure of downloaded files
  #       run: ls -R ./artifacts
      
  #     - name: Create Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         draft: true
  #         files: ./artifacts/**/*
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}